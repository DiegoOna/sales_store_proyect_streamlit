# -*- coding: utf-8 -*-
"""
Created on Mon Jan  8 22:00:23 2024

@author: User
"""

import streamlit as st
import joblib
import numpy as np 
from PIL import Image
import pandas as pd
import sklearn

st.set_page_config(page_title='Rossmann supermarkets',
                   page_icon='üåé',
                   layout='centered',
                   initial_sidebar_state='auto')



#st.title('PET PLANET')
image = Image.open('Rossman_528_299.png')
#nuevo_tamano_img=(669,155)
nuevo_tamano_img=(528,250)
image_redimensionada=image.resize(nuevo_tamano_img)
st.image(image_redimensionada, caption='by Ing. Diego O√±a ')
#st.subheader("Encuentra todo al mejor precio.")
#st.image('MarcaEMPRESA ML-JPG.jpg',width=100)

#=========================================================================
#=========================================================================


# Crear una barra lateral
sidebar = st.sidebar

# A√±adir un t√≠tulo a la barra lateral
sidebar.title("ROSSMANN SUPERMARKETS ")
sidebar.header("PRON√ìSTICO DE VENTAS ")
st.sidebar.image('MarcaPersonal_ML_JPG.jpg',width=100)
#===============================================================
#                  SECCI√ìN BARRA LATERAL
#===============================================================
sidebar = st.sidebar
#st.image('MarcaEMPRESA ML-JPG.jpg',width=100)
# A√±adir un cuadro de selecci√≥n a la barra lateral

clientes_custom = sidebar.text_input(label='Cantidad de Clientes',value=1)
try:
    customers=int(clientes_custom)
    if customers<=0:
       st.error('CAMPO: CANTIDAD DE CLIENTES "¬°DETECTA N√öMERO NEGATIVO !"', icon="üö®")
       sidebar.info(f'Ingresar un n√∫mero positivo en el campo para continuar con el resto de requerimientos',icon="‚ÑπÔ∏è")  
except ValueError: 
       st.error('CAMPO: CANTIDAD DE CLIENTES "¬°DETECTA CAR√ÅCTER NO NUM√âRICO!"', icon="üö®")
       sidebar.info(f'Ingresar un n√∫mero positivo en el campo para continuar con el resto de requerimientos..',icon="‚ÑπÔ∏è")
                
                  
compet_open = sidebar.text_input("Distancia de la competencia m√°s cercana (m)", value=0)
sidebar.info(f'PROMOCI√ìN 1 (Opcional): Se aplica por un d√≠a' ) 


promo_1= sidebar.selectbox("Aplica promoci√≥n 1", ['Seleccionar...',"Yes", "No"])
if promo_1=='Yes':
        promo1=1    
elif promo_1=='No':
        promo1=0            

    
    
try:
                   competition_open=float(compet_open)
                   if competition_open<0:
                      st.error('CAMPO: DISTANCIA DE LA COMPETENCIA...! "INGRESAR N√öMERO POSITIVO" ', icon="üö®")
                   else:
                       if sidebar.button("<< APLICAR >>"):
                                          #Data para predecir,toma todos los valores de ingreso y se aplica la predicion ene l modleo 
                                          model_filename = 'sales_store.pkl'
                                          # Cargamos el modelo desde el archivo
                                          loaded_model = joblib.load(model_filename)
                                          print("Hemos Cargado el modelo...")
                                          try:
                                             new_data={'Customers':[customers] ,
                                                       'Promo':[promo1],
                                                       'CompetitionDistance':[competition_open]
                                                       }
                                          
                                             #Esta data se √∫ltiliza para hacer una predici√≥n y comparaci√≥n cuando la competencia esta junto es decir CompetitionOpen=0
                                             data_compare={'Customers':[customers] ,
                                                           'Promo':[promo1],
                                                           'CompetitionDistance':[0]
                                                           }
                                             #Data para la presentaci√≥n. Esta data se muestra solo en la interface de streamlit, con los valores que se han ingresado
                                             data_visualize={'Clientes':[customers] ,
                                                     'Promoci√≥n 1':[promo_1],
                                                     'Distancia Competencia (m)':[competition_open]
                                                     }
                                             new_data=pd.DataFrame(new_data)
                                             data_visualize=pd.DataFrame(data_visualize)
                                             data_compare=pd.DataFrame(data_compare)
                                             st.header('üìÑ Datos ingresados: ')
                                             st.write(data_visualize)
                                             prediction= loaded_model.predict(new_data)
                                             prediction_base= loaded_model.predict(data_compare)

                                             print('Ejecutando predicci√≥n...')
                                             st.success(f' VENTAS PREDICCI√ìN:  {abs(prediction)} USD', icon="üèÜ")
                                          
                                             # Calcular el delta_ventas como un porcentaje
                                             porcentaje_delta_ventas=(prediction[0]/prediction_base[0])*100
                                             # Muestra las m√©tricas en Streamlit
                                             st.metric(label="üìàVentas Predicci√≥n", value=f"{abs(prediction[0]):.2f}", delta=f"{porcentaje_delta_ventas:.2f}%")

                                             col1, col2 = st.columns(2)
                                             col1.metric("üë©‚Äçüë©‚Äçüë¶‚Äçüë¶ Customers", f"{customers}", "")
                                             col2.metric("üè´ CompetitionOpen", f"{competition_open:.2f} m", "")

                                             # Muestra informaci√≥n adicional si hay un cambio en las ventas
                                             if porcentaje_delta_ventas != 0:
                                               st.info(f'Variaci√≥n de ventas: {round(porcentaje_delta_ventas, 2)} % cuando la competencia m√°s cercana est√° a {competition_open} metros.', icon="üëâ")    
                                          except NameError:                                             
                                                     st.error('CAMPO: Promoci√≥n 1 ¬°Seleccionar..!',icon="üö®")
                       else:
                            st.info(f'EL PRON√ìSTICO DE VENTAS SE MOSTRAR√Å AQU√ç',icon="üëâ") 
except ValueError: 
    st.error('CAMPO: DISTANCIA DE LA COMPETENCIA...!solo permite ingresar n√∫meros', icon="üö®")

 
               
                                     